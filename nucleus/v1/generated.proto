
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.open_cluster_management.api.nucleus.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// HubCore represents a deployment of nucleus hub core component.
// HubCore will be only deployed in open-cluster-management namespace.
message HubCore {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec represents a desired deployment configuration of nucleus hub
  optional HubCoreSpec spec = 2;

  // Status represents the current status of nucleus hub
  // +optional
  optional HubCoreStatus status = 3;
}

// HubCoreList is a collection of nucleus hub.
message HubCoreList {
  // Standard list metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of nucleus hub.
  repeated HubCore items = 2;
}

// HubCoreSpec represents a desired deployment configuration of nucleus hub.
message HubCoreSpec {
  // RegistrationImagePullSpec represents the desired image of registration controller installed on hub.
  // +required
  optional string registrationImagePullSpec = 1;
}

// HubCoreStatus represents the current status of nucleus hub.
message HubCoreStatus {
  // Conditions contain the different condition statuses for this hubcore.
  // Valid condition types are:
  // Applied: components in hub is applied.
  // Available: components in hub are available and ready to serve.
  // Progressing: components in hub are in a transitioning state.
  // Degraded: components in hub do not match the desired configuration and only provide
  // degraded service.
  repeated StatusCondition conditions = 1;
}

// SpokeCore represents a deployment of nucleus core agent on spoke cluster.
// When the deployment of spoke core agent is deployed, it will requires a secret
// with the name of bootstrap-hub-kubeconfig in the namespace defined in the spec.
message SpokeCore {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec represents the desired deployment configuratioin of nucleus agent.
  optional SpokeCoreSpec spec = 2;

  // Status represents the current status of nucleus agent.
  optional SpokeCoreStatus status = 3;
}

// SpokeCoreList is a collection of nucleus spoke agent.
message SpokeCoreList {
  // Standard list metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of nucleus spoke agent.
  repeated SpokeCore items = 2;
}

// SpokeCoreSpec represents the desired deployment configuratioin of nucleus spoke agent.
message SpokeCoreSpec {
  // Namespace is the namespace to deploy the agent.
  // The namespace must have a prefix of "open-cluster-management-", and if it is not set,
  // the namespace of "open-cluster-management" is used to deploy agent.
  // +optional
  optional string namespace = 1;

  // RegistrationImagePullSpec represents the desired image configuration of registration agent.
  // +required
  optional string registrationImagePullSpec = 2;

  // WorkImagePullSpec represents the desired image configuration of work agent.
  // +required
  optional string workImagePullSpec = 3;

  // ClusterName is the name of the spoke cluster to be created on hub.
  // The spoke agent generates a random name if it is not set, or discovers the appropriate cluster name on openshift.
  // +optional
  optional string clusterName = 4;
}

// SpokeCoreStatus represents the current status of nucleus spoke agent.
message SpokeCoreStatus {
  // Conditions contain the different condition statuses for this spokecore.
  // Valid condition types are:
  // Applied: components in spoke is applied.
  // Available: components in spoke are available and ready to serve.
  // Progressing: components in spoke are in a transitioning state.
  // Degraded: components in spoke do not match the desired configuration and only provide
  // degraded service.
  repeated StatusCondition conditions = 1;
}

// StatusCondition contains condition information.
message StatusCondition {
  // Type is the type of the cluster condition.
  // +required
  optional string type = 1;

  // Status is the status of the condition. One of True, False, Unknown.
  // +required
  optional string status = 2;

  // LastTransitionTime is the last time the condition changed from one status to another.
  // +required
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // Reason is a (brief) reason for the condition's last status change.
  // +required
  optional string reason = 4;

  // Message is a human-readable message indicating details about the last status change.
  // +required
  optional string message = 5;
}

